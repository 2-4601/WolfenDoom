#library "stealth"
#include "zcommon.acs"
//mxd. Handles footstep sounds

//Constants
#define PLAYER_STEP_DISTANCE 76 << 16 	// cause defines can't be fixed point numbers
#define MAX_NOISE_LEVEL 10 << 16        // This value is added to current visibility level when player step sound is played
#define PLAYER_TAG_OFFSET 1000

//Options
int PlayerDetectionVisibility = 100; // Player must be this visible to be detected by enemies

//Variables. Don't touch
int curStepDistance;
int lastPlayerX;
int lastPlayerY;
int playerID; // Used throughout other scripts in the boalib file!

///////////////////////
//SCRIPTS
//////////////////////
Script "PlayFootstepsSoundLoop" ENTER
{
	Delay(1);
	playerID = PLAYER_TAG_OFFSET + PlayerNumber();
	Thing_ChangeTID(0, playerID);

	lastPlayerX = GetActorX(playerID);
	lastPlayerY = GetActorY(playerID);

	while(true)
	{
		if(GetActorProperty(playerID, APROP_Waterlevel) < 3)
		{
			//footsteps
			int cfz = GetActorFloorZ(playerID);

			if(GetActorZ(playerID) - cfz == 0) //if we are not in the air
			{
				int cx = GetActorX(playerID);
				int cy = GetActorY(playerID);

				if(curStepDistance > PLAYER_STEP_DISTANCE)
				{
					if((GetPlayerInput(-1, INPUT_BUTTONS) & BT_CROUCH)) //different step sounds while crouching
					{
						ThingSound(playerID, "floor/dirt", 36);
					}
					else
					{
						SpawnForced("PlayerStep", cx, cy, cfz + 14);
						SetUserVariable(0, "noiselevel", MAX_NOISE_LEVEL >> 16);
					}

					curStepDistance = 0;
				}
				else
				{
					curStepDistance += VectorLength(lastPlayerX - cx, lastPlayerY - cy);
				}

				lastPlayerX = cx;
				lastPlayerY = cy;
			}
			else
			{
				curStepDistance = 0;
			}
		}

		Delay(1);
	}
}
#library "mineswpr"
#include "zcommon.acs"

int TIDIndexStart;
int TIDIndex = 60000; //Start for TIDs to assign to scannable things

/* Called by each mine (or other actor you want to scan for) */
Script "SetRadarTID" (void)
{
	If (!ActivatorTID())
	{
		If (TidIndexStart == 0) {TIDIndexStart = TIDIndex;}
		Thing_ChangeTID(0, TIDIndex++);
	}
}

/* Modified from the wiki - http://zdoom.org/wiki/Hudmessageonactor */
Function void HudMessageOnActor(int tid, int msgID, int Range, str Font, str text, int holdTime, str colour)
{
	int dist, ang, vang, pitch, x, y, multiplierX, multiplierY;
	int HUDX = 1024;
	int HUDY = 768;
	int ratio = 1.0;

	x = GetActorX(tid) - GetActorX(0);
	y = GetActorY(tid) - GetActorY(0); 

	vang = VectorAngle(x,y);
	ang = (vang - GetActorAngle(0) + 1.0) % 1.0;

	if(((vang+0.125)%0.5) > 0.25) dist = FixedDiv(y, sin(vang));
	else dist = FixedDiv(x, cos(vang));

	if ((ang < 0.2 || ang > 0.8) && (dist >> 16 < Range))
	{
		ratio = (Range * 1.0 - dist) / Range;

		HUDX = HUDX - (HUDX * ratio / 1.0);
		HUDY = HUDY - (HUDY * ratio / 1.0);

		SetHudSize(HUDX, HUDY, 1);

		int Zdist = (GetActorZ(tid)/* + GetActorProperty(tid, APROP_Height) / 2*/) - (GetActorZ(0) + GetActorProperty(0, APROP_Height)); 

		pitch = VectorAngle(dist, ZDist);
		pitch = (pitch + GetActorPitch(0)) % 1.0;

		if ((hudX/2) * sin(ang) != 0 && cos(ang) != 0 && (hudX/2) * sin(pitch) != 0 && cos(pitch) != 0)
		{
			x = HUDX/2 - ((HUDX/2) * sin(ang) / cos(ang));
			y = HUDY/2 - ((HUDX/2) * sin(pitch) / cos(pitch));

			SetFont(Font);
			HudMessage(s:text; HUDMSG_PLAIN | HUDMSG_NOTWITHFULLMAP | HUDMSG_LAYER_UNDERHUD, msgID, colour, (x << 16) + 32.0, (y << 16) + 32.0, holdTime);
		}
	}
}

Script "W_PlayerLoop" ENTER
{
	While (GameType() != GAME_TITLE_MAP)
	{
		If (CheckInventory("PowerMineSweeper") && TIDIndexStart > 0) //Only run if you have the mine sweeper and there are mines in the level.
		{
			int HUDX = GetScreenWidth();
			int HUDY = GetScreenHeight();

			SetHudSize(HUDX, HUDY, 1);

			For (int i = TIDIndexStart; i <= TIDIndex; ++i)
			{
				hudMessageonActor(i, i, 512, "MSPUC0", "A", 0.1, -1); //Range and sprite can be changed)
			}
		}
		Delay(1);
	}
}
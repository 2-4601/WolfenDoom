class CoinItem : StackableInventory {
	// Can be activated/deactivated and/or set dormant to prevent player from picking it up.
	// Inheriting from StackableInventory prevents player from picking it up if player is maxed out on it.

	bool AllowPickup;
	bool despawn;

	Default {
		Inventory.MaxAmount 9999;
		Tag "Money";
		+COUNTITEM
		+INVENTORY.UNDROPPABLE
		+INVENTORY.IGNORESKILL
	}

	override void Activate(Actor activator)
	{
		AllowPickup = true;
		Super.Activate(activator);
	}

	override void Deactivate(Actor activator)
	{
		AllowPickup = false;
		Super.Deactivate(activator);
	}

	override void BeginPlay()
	{
		Super.BeginPlay();
		AllowPickup = !(SpawnFlags & MTF_DORMANT);
	}

	override bool CanPickup(Actor toucher)
	{
		if (AllowPickup) return Super.CanPickup(toucher);
		return false;
	}

	override void Tick()
	{
		if (bCountItem != AllowPickup)
		{
			bCountItem = AllowPickup;

			level.total_items += bCountItem ? 1 : -1;
		}

		Super.Tick();
	}
}

class CoinDrop : CoinItem
{
	int time;
	int duration;

	Property Duration:duration;

	Default
	{
		-COUNTITEM
		Scale 0.5;
		Inventory.Amount 1;
		Inventory.PickupMessage "$COIN";
		Inventory.PickupSound "treasure/pickup";
		CoinDrop.Duration -60;
	}

	States
	{
		Spawn:
			ONEC A -1 LIGHT("COINLITE");
			Stop;
	}

	override void Tick()
	{
		if (time++ > ((duration >= 0) ? duration : -duration * 35) && CheckIfSeen()) { Destroy(); } // Disappears if out of sight and duration has elapsed

		Actor.Tick();
	}
}
// MIT License - (c) 2020 Kevin Caccamo, N00b

class ZScriptTools
{
	// Calculate the intercept position, and the time it takes for a projectile to hit the target.
	// Implementation of https://github.com/Realm667/WolfenDoom/issues/178#issuecomment-576599289
	static Vector3, double GetInterceptPosition(Vector3 ShooterPos, Vector3 TargetPos, Vector3 TargetVel, double MissileSpeed)
	{
		Vector3 ShooterToTarget = LevelLocals.Vec3Diff(ShooterPos, TargetPos); // TargetPos - ShooterPos
		double a = (TargetVel dot TargetVel) - (MissileSpeed * MissileSpeed);
		double b = ShooterToTarget dot TargetVel;
		double c = ShooterToTarget dot ShooterToTarget;
		if ((a * c) > (b * b))
		{
			// Cannot calculate intercept position
			if (developer >= 1)
			{
				Console.Printf("Cannot calculate intercept position!");
			}
			return TargetPos, -1;
		}
		double timeA = (-b + sqrt(b*b - a * c)) / a;
		double timeB = (-b - sqrt(b*b - a * c)) / a;
		double time = max(timeA, timeB);
		return TargetPos + (TargetVel * time), time;
	}
}

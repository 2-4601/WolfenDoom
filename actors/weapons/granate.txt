ACTOR HQ_Checker : Inventory {Inventory.MaxAmount 1}

ACTOR GrenadePickup : CustomInventory
{
	//$Category Weapons (Wolf3D)
	//$Title Grenade
	//$Color 14
	Scale 0.50
	Inventory.PickupMessage "$GRENADE"
	Tag "$TAGFRAGN"
	Inventory.MaxAmount 9
	Inventory.Icon THRPB0
	Inventory.UseSound "grenade/throw"
	Inventory.PickupSound "grenade/pickup"
	+INVENTORY.INVBAR
	Inventory.InterHubamount 9
	States
	{
	Spawn:
		THRP A -1
		Stop
	Use:
		TNT1 A 0 A_JumpIfInventory("HQ_Checker",1,"Stupid")
		TNT1 A 0 A_JumpIfInventory("AstroGrenadeToken", 1, 2)
		TNT1 A 0 A_FireCustomMissile("HandGrenade",0,0,0,0,FPF_NOAUTOAIM)
		Stop
		TNT1 A 0 {
			A_TakeInventory("AstroGrenadeToken", 1);
			A_FireCustomMissile("AstroHandGrenade",0,0,0,0,FPF_NOAUTOAIM);
		}
		Stop
	Stupid:
		TNT1 A 0 A_Print("THAT WAS RATHER STUPID OF YOU, DON'T YOU THINK CAPTAIN?",3.5)
		Fail
	}
}

ACTOR HandGrenade
{
	Radius 4
	Height 3
	Speed 40
	Damage (1)
	DamageType "Frag"
	Scale 0.50
	Projectile
	-NOGRAVITY
	-NOTELEPORT
	+WINDTHRUST
	Obituary "$OBGRENADE"
	BounceType Doom
	BounceFactor 0.2
	WallBounceFactor 0.6
	BounceSound "grenade/bounce"
	States
	{
	Spawn:
		THRW A 2 A_Countdown
		THRW BCDEFGH 2
		Loop
	Death:
		THRW B 35
		TNT1 A 0 A_AlertMonsters
		TNT1 A 0 A_SetScale(1.75,1.75)
		TNT1 A 0 A_SetTranslucent(0.75,1)
		TNT1 A 0 A_PlaySound("grenade/explode", CHAN_AUTO, 1.0, FALSE, 0.1)
		TNT1 A 1 A_SpawnItemEx("GeneralExplosion_Medium")
		TNT1 A 1 Radius_Quake(10,10,0,16,0)
		Stop
	}
}

ACTOR HansGrenade : HandGrenade //Fast version for Afrika Boss
{
	Speed 50
	BounceFactor 0.4
	WallBounceFactor 0.8
	States
	{
	Death:
		THRW B 10
		TNT1 A 0 A_AlertMonsters
		TNT1 A 0 A_SetScale(1.75,1.75)
		TNT1 A 0 A_SetTranslucent(0.75,1)
		TNT1 A 0 A_PlaySound("grenade/explode", CHAN_AUTO, 1.0, FALSE, 0.1)
		TNT1 A 1 A_SpawnItemEx("GeneralExplosion_Medium")
		TNT1 A 1 Radius_Quake(20,20,0,32,0)
		Stop
	}
}

// Given to players when leaving INTERMAP. Restores the player's ability to
// throw grenades returns non-training grenades to them, and clears their
// inventory (in case they were in training area when map changed).
// Added also MineSweeper removal for playism purposes - Ozy81
ACTOR PlayerLeavingHQ : CustomInventory
{
	Inventory.MaxAmount 0
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 {
			// Return seized grenades to player
			if (CountInv("HQ_Checker") == 0) {
				A_TakeInventory("GrenadePickup", 0x7FFFFFFF);
				A_TakeInventory("MineSweeper", 0x7FFFFFFF);
				A_TakeInventory("Power", 0x7FFFFFFF);
				A_GiveInventory("GrenadePickup", CountInv("NonTrainingGrenade"));
				A_GiveInventory("MineSweeper", CountInv("NonTrainingMineSweeper"));
				A_GiveInventory("Power", CountInv("NonTrainingPower"));
				A_TakeInventory("NonTrainingGrenade", 0x7FFFFFFF);
				A_TakeInventory("NonTrainingMineSweeper", 0x7FFFFFFF);
				A_TakeInventory("NonTrainingPower", 0x7FFFFFFF);
			}

			// Restore player's ability to throw grenades & to use minesweeper
			A_TakeInventory("HQ_Checker", 1);

			// Clear the player's inventory (in case they're in training area)
			ACS_NamedExecuteWithResult("CLEAR INVENTORY", 0);
		}
		Stop
	}
}

// Counts the grenades that were seized from the player when they entered the
// training area. This provides support for any number of players.
ACTOR NonTrainingGrenade : Inventory
{
	Inventory.MaxAmount 9
	+INVENTORY.UNDROPPABLE
	+INVENTORY.UNTOSSABLE
}

ACTOR NonTrainingMineSweeper : NonTrainingGrenade { Inventory.MaxAmount 1 }
ACTOR NonTrainingPower : NonTrainingGrenade { Inventory.MaxAmount 2400 }

// Take grenades & minesweeper from players inside the training area.
ACTOR ConfiscateTrainingItems : CustomInventory
{
	Inventory.MaxAmount 0
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Pickup:
		TNT1 A 0 {
			// Take grenades from player if they're in the training area
			if (CountInv("HQ_Checker") == 0) {
				A_TakeInventory("GrenadePickup", 0x7FFFFFFF);
				A_TakeInventory("MineSweeper", 0x7FFFFFFF);
				A_TakeInventory("Power", 0x7FFFFFFF);
			}
		}
		Stop
	}
}
